Using LAPACK
Author: Roxana Tesileanu, roxana.te@web.de
Date: November 2017
Affiliation: INCDS BV


From the Maven repository get the coordinates for the LAPACK package:

// https://mvnrepository.com/artifact/com.github.fommil.netlib/core
"com.github.fommil.netlib" % "core" % "1.1.2"

Next, add the Maven coordinates to the build.sbt file of the Scala project.

__________________________________________

My first research questions I need to deal with are:
- how can I turn a Scala 2D Array into a Fortran matrix which I can decompose with LAPACK?
- is the netlib core-1.1.2.jar as easy to use in Scala as the GDAL.jar? 
(i.e. how exactly can I access its functions?)

________________________________________   

SOLVING SYSTEMS OF LINEAR EQUATIONS WITH DGESV ROUTINE:

Ax=b

Suppose I have the matrix A which is a Scala 2D Array, a vector x of unknowns, and a vector b of constants (entries for the response variable):

val A = Array(Array(3,1,0), Array(-1, 2, 2), Array(5, 0, -1))
val b = Array(6, -7, 10)
import com.github.fommil.netlib.LAPACK.{getInstance => lapack}
lapack.dgesv(....??.....)

From the java api for DGESV (http://icl.cs.utk.edu/projectsfiles/f2j/javadoc/index.html) the arguments for is are:

N - is an integer, and denotes the number of linear equations (for my case from above is 3)

NRHS - the no. of column of b (in my case 1)
LDA - is the leading dimension of A (I guess it is the size, i.e. (3,3))
IPIV -  
