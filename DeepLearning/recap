val simplestNetwork = (input: Double, weight :Double) => input*weight
val prediction1 = simplestNetwork(8.5, 0.1)
def multipleOut1Inp (myWeights : Array[Double], myInput : Double) : Array[Double] = {
val myPredictions = myWeights map (i => (i*myInput))
myPredictions
}
multipleOut1Inp(Array(0.3, 0.2, 0.9), 0.65)
def multipleInp1Out (myWeights : Array[Double], myInputs: Array[Double]) : Double = {
val myPairs = myWeights zip myInputs
val pairsProd = myPairs.map(p => (p._1 * p._2))
pairsProd.sum
}
